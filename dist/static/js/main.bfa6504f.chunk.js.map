{"version":3,"sources":["components/layout/SignedInLinks.jsx","store/actions/authActions.js","components/layout/SignOutLinks.jsx","components/layout/Navbar.jsx","components/dashboard/Notification.jsx","components/project/ProjectSummary.jsx","components/project/ProjectsList.jsx","components/dashboard/Dashboard.jsx","components/project/ProjectDetails.jsx","store/actions/projectActions.js","components/auth/Signin.jsx","components/auth/Signup.jsx","components/project/CreateProject.jsx","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","console","log","links","uid","isLoaded","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectsList","projects","Dashboard","this","Notification","React","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","deletePost","projectId","getFirestore","doc","delete","history","push","Signin","email","password","submitHandler","e","preventDefault","signIn","handleChange","setState","target","value","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","Signup","firstName","lastName","handleSubmit","signUp","message","name","newUser","createUserWithEmailAndPassword","resp","set","firstname","lastname","signUpAction","CreateProject","createProject","cols","rows","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initialState","authReducer","action","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.bfa6504f.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { signOutAction } from '../../store/actions/authActions'\nimport { connect } from 'react-redux';\n\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className='right'>\n            <li><NavLink to='/create'>Create</NavLink></li>\n            <li><a onClick={props.signOut} >Logout</a></li>\n            <li><span className='btn btn-floating pink lighten-1'>{props.profile.initials}</span></li>\n        </ul>\n    )\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOutAction())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signInAction = (credentials) => {\n    return (dispatch, getState, {\n        getFirebase\n    }) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            return dispatch({\n                type: 'LOGIN_SUCCESS'\n            })\n        }).catch((err) => dispatch({\n            type: 'LOGIN_ERROR',\n            err\n        }))\n    }\n}\n\nexport const signOutAction = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut()\n            .then(() => {\n                return dispatch({\n                    type: 'SIGNOUT_SUCCESS'\n                })\n            })\n            .catch((err) => {\n                dispatch('SIGNOUT_ERROR', err)\n            });\n    }\n\n}\n\nexport const signUpAction = (newUser) => {\n    return (dispatch, getState, {getFirebase,getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        firebase.auth().createUserWithEmailAndPassword(\n                newUser.email,\n                newUser.password\n            ).then((resp) => {\n                return firestore.collection('users').doc(resp.user.uid).set({\n                    firstname: newUser.firstName,\n                    lastname: newUser.lastName,\n                    initials: newUser.firstName[0] + newUser.lastName[0]\n                });\n            }).then(() => dispatch({type: 'SIGNUP_SUCCESS'}))\n            .catch((err) => dispatch({type: 'SIGNUP_ERROR',err}))\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>SignUp</NavLink></li>\n            <li><NavLink to='/login'>Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const { auth, profile } = props\n    console.log(profile)\n\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className='brand-logo'>MarioPlan</Link>\n                { auth.isLoaded && links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) =>{\n    const { notifications } = props;\n\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title center\">Notifications</span>\n                    <ul className='notifications'>\n                       { notifications && notifications.map( (item) => {\n                           return (\n                               <li key={item.id}>\n                                   <span className=\"pink-text\">{item.user}</span>\n                                    <span> {item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                         {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                               </li>\n                           )\n                       })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = (props) => {\n    return (\n        <>\n        <div className='card z-depth-0 project-summary'>\n                <div className=\"card-content grey-text text-darken-3\">\n                 <span className=\"card-title\">{props.project.title}</span>\n                    <p>Posted by {props.project.authorFirstName} {props.project.authorLastName}</p>\n                    <p className='grey-text'>{moment(props.project.createdAt.toDate()).calendar()}</p>\n                </div>\n            </div>\n    </>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport {Link } from 'react-router-dom';\n\nconst ProjectsList = (props) => {\n    return (\n        <div className='project-list section'>\n            { props.projects && props.projects.map(project => {\n                return (\n                    <Link to={'/project/'+ project.id} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                    )})\n            }\n        \n        </div>\n    )\n}\n\nexport default ProjectsList;","import React from 'react';\nimport Notifications from './Notification';\nimport ProjectsList from '../project/ProjectsList'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\n\n\nclass Dashboard extends React.Component {\n    render() {\n        const { projects, auth, notifications } = this.props\n        if (!auth.uid) {\n            return <Redirect to='/login' />\n        }\n        return (\n            <div className=\"dashboad container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectsList projects={this.props.projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' , orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n    ])\n)(Dashboard)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { deletePost } from '../../store/actions/projectActions'\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    console.log(props)\n    const deleteProject = () => {\n        props.history.push('/')\n        props.deletePost(props.match.params.id)\n    }\n    if (props.project){\n       return <div className=\"project-details section container\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">{props.project.title}</span>\n                    <p>{props.project.content}</p>\n                </div>\n                <div className=\"card-action grey-text\">\n                    <p>Posted by {props.project.authorFirstName} {props.project.authorLastName}</p>\n                    <button className=\"btn red right\" onClick={deleteProject}>Delete</button>\n                    <p>{moment(props.project.createdAt.toDate()).calendar()}</p>\n                </div>\n\n            </div>\n        </div>\n    }\n    else{\n        return (\n            <div className=\"center\"><p>Loading...</p></div>\n            )\n    }\n    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects\n    const project = projects ? projects[id] : null;\n    return {\n        project: project\n    }   \n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deletePost: (projectId) => { \n            return dispatch(deletePost(projectId))\n        }\n    }\n} \n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    firestoreConnect([{ 'collection': 'projects' }])\n\n)(ProjectDetails)","export const createProject = (project) => {\n    return (dispatch, getState, { getFirestore }) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile\n        console.log(profile)\n        const authorId = getState().firebase.auth.uid\n        console.log('testing project reducer', getState())\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstname,\n            authorLastName: profile.lastname,\n            authorId: authorId,\n            createdAt:new Date()\n        }).then(()=>{\n            dispatch({type:'CREATE_PROJECT', project})\n        }).catch((err)=>{\n            dispatch({type:'CREATE_PROJECT_ERROR', err})\n        })\n    }\n\n};\n\n\nexport const deletePost = (projectId) => {\n    return (dispatch, getState,  { getFirestore }) => {\n        const firestore = getFirestore();\n        firestore.collection('projects').doc(projectId).delete();\n        return dispatch({type:'DELETE_POST', projectId})\n    }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signInAction } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass Signin extends Component {\n\n    state = {\n        email: '',\n        password: ''\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.id]: e.target.value })\n    }\n\n    render() {\n        const { authError , auth } =  this.props\n        if(auth.uid) {return <Redirect to='/'/>}\n        return (\n            <div className=\"signin container section\">\n\n                <form onSubmit={this.submitHandler} className='white'>\n                    <div className=\"red-text center\">\n                        <p>{this.props.authError ? 'Login Failed' : null}</p>\n                    </div>\n\n                    <h5>Login In</h5>\n                    \n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    \n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink\">Submit</button>\n                    </div>\n\n\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => { dispatch(signInAction(creds)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport { signUpAction } from '../../store/actions/authActions';\n\nclass Signup extends Component {\n\n    state = {\n        firstName:'',\n        lastName:'',\n        email:'',\n        password:''\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(this.state)\n        this.props.signUp(this.state)\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.id]:e.target.value})\n    }\n\n    render() {\n        const { auth, authError } = this.props;\n        if(auth.uid) {return <Redirect to='/'/>}\n        return (\n            <div className='container'>\n                <form className='text-grey text-darken-3 white' \n                onSubmit={this.handleSubmit}>\n\n                    <div className=\"center red-text\">\n                        { authError ? <p> {authError.message} </p>:null }\n                    </div>\n                    <h5 className='text-grey'>Sign up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"FirstName\">First Name</label>\n                        <input type=\"text\" name=\"FirstName\" id=\"firstName\" onChange= {this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"LastName\">Last Name</label>\n                        <input type=\"text\" name=\"LastName\" id=\"lastName\" onChange= {this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" name=\"email\" id=\"email\" onChange= {this.handleChange}/>\n                    </div>\n                    \n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">password</label>\n                        <input type=\"password\" name=\"password\" id=\"password\" onChange= {this.handleChange}/>\n                    </div>\n                    \n                    <div className=\"input-field\">\n                        <button type=\"submit\" className=\"btn pink\">Submit</button>\n                    </div>\n                </form>\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUpAction(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n\n    state = {\n        title: '',\n        content: ''\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.id]: e.target.value })\n    }\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid){\n            return <Redirect to='/login'/>\n        }\n        return (\n            <div className='container'>\n                <form className=\"white section\" onSubmit={this.handleSubmit}>\n                    <h5>Create Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" name=\"title\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Content</label>\n                        <textarea name=\"content\" id=\"content\" cols=\"30\" rows=\"10\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink z-depth-1\">Submit</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth:state.firebase.auth,\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport Signin from './components/auth/Signin';\nimport Signup from './components/auth/Signup';\nimport CreateProject from './components/project/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Navbar/>\n        <Switch>\n          <Route exact path='/' component={Dashboard}/>\n          <Route path='/project/:id' component={ProjectDetails}/>\n          <Route path='/login' component={Signin} />\n          <Route path='/signup' component={Signup}/>\n          <Route path='/create' component={CreateProject}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n\n    authError: null\n\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login failed')\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError:null\n             }\n    \n        case 'SIGNOUT_SUCCESS':\n            console.log('signout successful')\n            return state\n\n        case 'SIGNOUT_ERROR':\n            console.log('signout failed')\n            return state\n\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return state\n        \n        case 'SIGNUP_ERROR':\n            console.log('signup failed', action.err)\n            return {\n                ...state,\n                authError:action.err\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initialState = {\n    projects:[\n        {id:1, title:'Mario plays the piano', content:'blah blah blah'},\n        {id:2, title:'Rio plays the guitar', content:'blah blah blah'},\n        {id:3, title:'Sip plays the bongo', content:'blah blah blah'},\n    ]\n};\n\nconst projectReducer = (state=initialState, action) => {\n\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log('post created', action.project)\n            return state\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err)\n            return state\n        case 'DELETE_POST':\n            console.log('deleted this post', action.projectId)\n            return state\n         default:{\n            return state\n        }\n    }\n}\n\nexport default projectReducer;","import {combineReducers} from 'redux';\nimport authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer,\n})\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/messaging';\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyBVnNMK_TkoHCneiRpJHaHjmFq1RieCfbo\",\n    authDomain: \"marioplan-93ca8.firebaseapp.com\",\n    databaseURL: \"https://marioplan-93ca8.firebaseio.com\",\n    projectId: \"marioplan-93ca8\",\n    storageBucket: \"marioplan-93ca8.appspot.com\",\n    messagingSenderId: \"751329258992\",\n    appId: \"1:751329258992:web:23f14dabb295fd711f4135\",\n    measurementId: \"G-N20GL649XQ\"\n};\n\nfirebase.initializeApp(firebaseConfig)\nfirebase.firestore().settings({\n    timestampsInSnapshots: true\n})\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(firebase, fbConfig)\n    )\n);\n\nconst profileSpecificProps = {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n    enableRedirectHandling: false,\n    resetBeforeLogin: false\n  }\n  \n\nconst rrfProps = {\n    firebase,\n    config: fbConfig,\n    config: profileSpecificProps,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n};\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <App />\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n\nserviceWorker.unregister(); "],"sourceRoot":""}